@model RecOutletWarehouse.Controllers.ReceivingLogController.ReceivingLogCreationViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@*submitForms = function(){*@

<script type ="text/javascript">

</script>

<h2>Index</h2>
<div class="center-element center-text">
    <table class="button-columns">
        <tr>
            @*<td><input type="button" value="Create New Receiving Log" class="main-menu-button"
                onclick="location.href='@Url.Action("CreateNewRL","ReceivingLog")'" /></td>
            <td><input type="button" value="Search for Receiving Log" class="main-menu-button"
                onclick="location.href='@Url.Action("Search","ReceivingLog")'" /></td>*@

            @*<select name="FavWebSite" size="5">
                <option value="SM">http://www.scriptingmaster.com</option>
                <option value="Google">http://www.google.com</option>
                <option value="MSN">http://www.msn.com</option>
                <option value="yahoo">http://www.yahoo.com</option>
                <option value="microsoft">http://www.microsoft.com</option>
            </select>*@

            

        </tr>
    </table>

    @using (Html.BeginForm("findPO", "ReceivingLog", new { name = "orig", id = "orig" }))
    {
        <input type="text" id="po" name="po" />          
        <input type="submit" value="Begin RL" />
    }

    <br />


@if (Model != null)
{
    //ReceivingLogCreationViewModel
    //var count = 1;
    var count = 0;

    //using (Html.BeginForm("MarkedReceived", "ReceivingLog"))//, FormMethod.Post)) //, new { name = count + "", id = count + "", onsubmit = "return false;"}) )
    //using (Html.BeginForm("CreateReceived", "ReceivingLog"))//, FormMethod.Post)) //, new { name = count + "", id = count + "", onsubmit = "return false;"}) )
    using (Html.BeginForm("CreateReceived", "ReceivingLog", FormMethod.Post))//, new { name = count + "", id = count + "", onsubmit = "return false;"}) )
    //using (Html.BeginForm("CreateReceived", "ReceivingLogController", FormMethod.Post))//, new { name = count + "", id = count + "", onsubmit = "return false;"}) )
    //CreateReceived
    //using(Html.BeginForm())
    {
            <table id="RLtable">
            
            @foreach (RecOutletWarehouse.Models.PurchaseOrder.PurchaseOrderLineItem objPO in Model.LineItems)
            {
            
            <tr>    @*Modify tr attributes to have padding and hold the border. Remove border from td*@
                <td>
                    PO Line Item:
                    @objPO.POLineItem
                    @Html.HiddenFor(model => model.RL[count].POLineItemID, new { @Value = @objPO.POLineItem })
                </td>
                <td>
                    Purchase Order: @objPO.POID
                    @*{ViewBag.POID = @objPO.POID;}*@
                    @Html.Hidden("POID", @objPO.POID)
                </td>
                <td>
                    Item RPC: @objPO.RecRPC
                </td>
                <td>
                    Quantity Ordered: @objPO.QtyOrdered
                </td>
                <td>
                    Quantity Type ID: @objPO.QtyTypeId
                    @Html.HiddenFor(model => model.RL[count].QtyTypeID, new { @Value = @objPO.QtyTypeId } )
                </td>
                <td>
                    Receive Date: 
                    @Html.TextBoxFor(model => model.RL[count].ReceiveDate, new { type = "date", @Value = DateTime.Now.Date })
                    @*Html.TextBox("ReceiveDate", DateTime.Now, new { type = "date" })*@
                    @Html.ValidationMessageFor(model => model.RL[count].ReceiveDate)
                </td>
                <td>
                    Quantity Received: 
                    @Html.TextBoxFor(model => model.RL[count].ReceivedQty, new { @Value = @objPO.QtyOrdered } )
                    @Html.ValidationMessageFor(model => model.RL[count].ReceivedQty)
                </td>
                <td>
                    Notes: 
                    @Html.TextAreaFor(model => model.RL[count].ReceivingNotes)
                </td>
                @*<td><input type="submit" value="Record Received" /></td>*@
            </tr>
            
           @*RecOutletWarehouse.Models.PurchaseOrder.PurchaseOrderLineItem item = objItem;*@
            
                count++;

            }

            </table>
    
            @*Html.Hidden("count", count)*@
            <input type="submit" value="Record Received" />
    
    }

        @*}*@

    @*</table>*@

        @*<input type="button" value="Record Received" onclick="submitForms(1)" />*@
 
    //}
//}


}

<br />

</div>
