@using System.Web.Optimization;
@model RecOutletWarehouse.Controllers.ItemManagementController.allItemDeptCatSubcatViewModel
@{
    ViewBag.Title = "ItemCharacteristics";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<h2>Item Characteristics</h2>

@section tabnavigation{
    <ul class="nav clearfix">
        <li>@Html.ActionLink("Create New Item", "CreateNewItem")</li>
        <li>@Html.ActionLink("Print Item Labels", "PrintLabels")</li>
        <li class="active">@Html.ActionLink("Item Characteristics", "ItemCharacteristics")</li>
    </ul> 
}

<div class="item-char-container">
    <div class="item-char-outter">
        <h3 class="item-char">Departments (@Model.departments.Count)</h3>
        <hr />
        <div class="search-box dept-search">
            @using (Html.BeginForm())
            {
                @Html.HiddenFor(x => x.dept.DepartmentID, new { id = "dept_id" })
                @Html.TextBoxFor(x => x.dept.DepartmentName, new { id = "dept", @class = "item-char-search", placeholder = "Search for a Department..." })
                <input type="hidden" name="editButton" value="department" />
                <input type="submit" value="Search" class="button-search " id="" />
            }
        </div>
        <div class="item-char">
            @foreach (var item in Model.departments)
            {
                <div class="item-char-row">
                    <div class="item-char-list1"><p class="item-char">@item.DepartmentID</p></div>
                    <div class="item-char-list2"><p class="item-char">@item.DepartmentName</p></div>
                    <div class="item-char-list3"><input type="button" value="Edit" class="button"
                                                            onclick="location.href='@Url.Action("EditItemCharacteristics", "ItemManagement",
                                                                        new { id = item.DepartmentID, editButton = "department" })'" /></div>
                    @*<div class="item-char-list3"><input type="button" value="Edit" class="button dept-dialog-button" id="@(item.DepartmentID)" /></div>*@
                </div>
            }
        </div>
    </div>
    <div class="item-char-outter">
        <h3 class="item-char">Categories (@Model.categorys.Count)</h3>
        <hr />
        <div class="search-box">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(x => x.cat.CategoryID, new { id = "cat_id" })
            @Html.TextBoxFor(x => x.cat.CategoryName, new { id = "cat", @class = "item-char-search", placeholder = "Search for a Category..." })
            <input type="hidden" name="editButton" value="category" />
            <input type="submit" value="Search" class="button-search" />
        }
        </div>
        <div class="item-char">
            @foreach (var item in Model.categorys)
            {
                <div class="item-char-row">
                    <div class="item-char-list1"><p class="item-char">@item.CategoryID</p></div>
                    <div class="item-char-list2"><p class="item-char">@item.CategoryName</p></div>
                    <div class="item-char-list3"><input type="button" value="Edit" class="button"
                                                            onclick="location.href='@Url.Action("EditItemCharacteristics", "ItemManagement",
                                                                        new { id = item.CategoryID, editButton = "category" })'" /></div>
                    @*<div class="item-char-list3"><input type="button" value="Edit" class="button cat-dialog-button" id="@(item.CategoryID)" /></div>*@
                </div>
            }
        </div>
    </div>
    <div class="item-char-outter">
        <h3 class="item-char">Subcategories (@Model.subcats.Count)</h3>
        <hr />
        <div class="search-box">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(x => x.subcat.SubcategoryID, new { id = "sub_id" })
            @Html.TextBoxFor(x => x.subcat.SubcategoryName, new { id = "sub", @class = "item-char-search", placeholder = "Search for a Subcategory..." })
            <input type="hidden" name="editButton" value="subcategory" />
            <input type="submit" value="Search" class="button-search" />
        }
        </div>
        <div class="item-char">
            @foreach (var item in Model.subcats)
            {
                <div class="item-char-row">
                    <div class="item-char-list1"><p class="item-char">@item.SubcategoryID</p></div>
                    <div class="item-char-list2"><p class="item-char">@item.SubcategoryName</p></div>
                    <div class="item-char-list3"><input type="button" value="Edit" class="button"
                                                            onclick="location.href='@Url.Action("EditItemCharacteristics", "ItemManagement",
                                                                        new { id = item.SubcategoryID, editButton = "subcategory" })'" /></div>
                    @*<div class="item-char-list3"><input type="button" value="Edit" class="button sub-dialog-button" id="@(item.SubcategoryID)" /></div>*@
                </div>
            }
        </div>
    </div>
</div>
<center>
<input type="button" onclick="JavaScript:newPopup('@Url.Action("addNewDeptCatSubcat", "ItemManagement")    ');" class="button" value="Add a new Department, Category, and/or Subcategory" />
</center>

@*@foreach (var item in Model.departments)
{
    <div id="dept-dialog-form@(item.DepartmentID)">
        @using (Html.BeginForm())
        {
            @Html.
        }
        <h2>Department ID: @(item.DepartmentID)</h2>
        <p>Department Name: @(item.DepartmentName)</p>
        <p>Department Comments: @(item.DepartmentDescription)</p>
    </div>
}*@

@for (int i = 0; i < Model.departments.Count; i++)
{
    <div id="dept-dialog-form@(Model.departments[i].DepartmentID)">
        @using (Html.BeginForm())
        {
            <h2>Department ID: @Model.departments[i].DepartmentID</h2>
            <hr />
            @Html.Label("Department Name")
            @Html.EditorFor(x => x.departments[i].DepartmentName)
            @Html.Label("Department Description")
            @Html.TextAreaFor(x => x.departments[i].DepartmentDescription)
            <input type="submit" class="button" />
        }
    </div>
}

@foreach (var item in Model.categorys)
{
    <div id="cat-dialog-form@(item.CategoryID)">
        <h2>Category ID: @(item.CategoryID)</h2>
        <p>Category Name: @(item.CategoryName)</p>
        <p>Category Comments: @(item.CategoryDescription)</p>
    </div>
}

@foreach (var item in Model.subcats)
{
    <div id="sub-dialog-form@(item.SubcategoryID)">
        <h2>Subdepartment ID: @(item.SubcategoryID)</h2>
        <p>Subdepartment Name: @(item.SubcategoryName)</p>
    </div>
}

<script type="text/javascript">
    // Popup window code
    function newPopup(url) {
        popupWindow = window.open(
            url, 'popUpWindow', 'height=700,width=800,left=10,top=10,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no,status=yes')
    }
</script>

@*The following script is for the autocomplete search feature*@
<script type="text/javascript">
    var url = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "CategoryApi" })';
    $('#cat').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: url,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.CategoryName,
                            value: item.CategoryID
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#cat').val(ui.item.label);
            $('#cat_id').val(ui.item.value);
            return false;
        },
        minLength: 1
    });

    var url1 = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "SubcategoryApi" })';
    $('#sub').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: url1,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.SubcategoryName,
                            value: item.SubcategoryID
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#sub').val(ui.item.label);
            $('#sub_id').val(ui.item.value);
            return false;
        },
        minLength: 1
    });

    var url2 = '@Url.RouteUrl("DefaultApi",
        new { httproute = "", controller = "DepartmentApi" })';
    $('#dept').autocomplete({
        source: function (request, response) {
            $.ajax({
                url: url2,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.DepartmentName,
                            value: item.DepartmentID
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#dept').val(ui.item.label);
            $('#dept_id').val(ui.item.value);
            return false;
        },
        minLength: 1
    });
</script>

<!-- JQuery Dialog scripts for Departments -->
<script>
    $(function() {
        $( "div[id*='dept-dialog-form']" ).dialog({
            autoOpen: false,
            height: 400,
            width: 450,
            modal: true,
            buttons: {
                Cancel: function() {
                    $( this ).dialog( "close" );
                },
                Submit: function() {
                    $ (this ).dialog( "save" );
            }
            }
        });
 
        $( ".dept-dialog-button" )
          .button()
          .click(function() {
              $( "#dept-dialog-form" + this.id ).dialog( "open" );
          });
    });
</script>

<!-- JQuery Dialog scripts for Categories -->
<script>
    $(function() {
        $( "div[id*='cat-dialog-form']" ).dialog({
            autoOpen: false,
            height: 300,
            width: 350,
            modal: true,
            buttons: {
                Cancel: function() {
                    $( this ).dialog( "close" );
                }
            }
        });
 
        $( ".cat-dialog-button" )
          .button()
          .click(function() {
              $( "#cat-dialog-form" + this.id ).dialog( "open" );
          });
    });
</script>

<!-- JQuery Dialog scripts for Subcategories -->
<script>
    $(function() {
        $( "div[id*='sub-dialog-form']" ).dialog({
            autoOpen: false,
            height: 300,
            width: 350,
            modal: true,
            buttons: {
                Cancel: function() {
                    $( this ).dialog( "close" );
                }
            }
        });
 
        $( ".sub-dialog-button" )
          .button()
          .click(function() {
              $( "#sub-dialog-form" + this.id ).dialog( "open" );
          });
    });
</script>