@using System.Web.Optimization;
@using RecOutletWarehouse.HtmlHelpers;
@model RecOutletWarehouse.Controllers.ItemManagementController.BrowseItemViewModel

@{
    ViewBag.Title = "Browse Items";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section tabnavigation{
    <ul class="nav clearfix">
        <li class="active">@Html.ActionLink("Item Management","BrowseItemManagement")</li>
        <li>@Html.ActionLink("Create New Item","CreateNewItem")</li>
        <li>@Html.ActionLink("Print Item Labels","PrintLabels")</li>
        <li>@Html.ActionLink("Item Characteristics","ItemCharacteristics")</li>
    </ul>  
}


<script>
    $(function () {
        $(".actionMenu").menu();
    });
</script>

<h2>Browse and Manage Items</h2>
<ul class="field-validation-error">
    <li>
        TODO: Make this page aesthetically similar to other list pages
    </li>
    <li>
        TODO: Add appropriate "actions" to each ITEM row
    </li>
    <li>
        TODO: Add filtering by Vendor, Product Line, Department, Category, etc...
    </li>
</ul>
<div>
    @*A vendor's product lines are shown in <span class="bold-italics">bold italics</span> underneath the vendor's name.*@
</div>
<h3>
    @Html.ActionLink("Create New Item", "CreateNewItem")
</h3>
<h3>Search</h3>
@using (Html.BeginForm())
{
    <div class="search">
        Item name contains: @Html.TextBox("itemNameSearch")
        <input type="submit" value="Search" />
    </div>
}
<!-- IMPORTANT: To use the following syntax, make sure you have an appropriate
     "using" statement at the beginning of the file -->
<div class="roloLinks pager">
    @Html.RolodexLinks(x => Url.Action("BrowseItemManagement"))
</div>


<div class=" potable-area">
    <table class="potable">
        <tr class="leftjust">
            <th>
                Item Name
            </th>
            <th>
                Item RecRPC
            </th>
            <th>
                Item Description
            </th>
            <th>
                Item Catagory
            </th>
            <th>
                Actions
            </th>
        </tr>

    @foreach (var i in Model.Items) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => i.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => i.RecRPC)
            </td>
            <td>
                @Html.DisplayFor(modelItem => i.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => i.CategoryID)
            </td>
            <td>
                <ul class="actionMenu">
                    <li>
                        Actions
                        <ul> <li>@Html.ActionLink("Edit Item Information", "EditItem", new { id=i.ItemID })</li>
                            @*<li>@Html.ActionLink("View Vendor Details", "VendorDetail", new { id=i.ItemID })</li>*@
    @*                        <li>@Html.ActionLink("Add Product Line to this Vendor", "CreateNewPL", new { vendorId = i.ItemID })</li>
                            <li>@Html.ActionLink("P.O. to this Vendor", "CreateNewPO", "PurchaseOrder", new { vendorName = i.ItemID }, new { })</li>*@
                        @*</ul>*@
                    </li>
                </ul>
            </td>
        </tr>
    }
    </table>
</div>
<div class="searchTotal">@Model.PagingInfo.TotalItems items match current sorting criteria</div>
<div class="pager">
   @* @Html.PageLinks(Model.PagingInfo, x => Url.Action("BrowseItemManagement", new {page = x, venNameSearch = Model.search, firstLetter = Model.startLetter}))*@
</div>

<!--Validation scripts-->
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
