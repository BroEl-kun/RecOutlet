@model RecOutletWarehouse.Controllers.EventController.ItemEventViewModel

@{
    ViewBag.Title = "AddItemsToEvent";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section tabnavigation{
    <ul class="nav clearfix">
        <li>@Html.ActionLink("View Events", "ViewEvents")</li>
         <li>@Html.ActionLink("View Sale Pricing Information", "ViewSalesPrice")</li>
        <li class="active">@Html.ActionLink("Add an Item to an Event", "AddItemsToEvent")</li>
    </ul>  
}

<h2>Add Items to an Event</h2>

 @using (Ajax.BeginForm("ItemToEvent", null, new AjaxOptions { UpdateTargetId = "currentItems" }, new { @id = "form" })) {
    <fieldset>
        
        <legend>Information about the item</legend>
        <div>
            Add to Event:
        </div>
        <div>
            @Html.DropDownList("EventToAddTo", Model.Events, "--Select an Event--", new { @id = "eventCode" })
        </div>
        <div>
            Item to add:
        </div>
        <div>
            @Html.TextBoxFor(model => model.ItemName, new { @id = "searchItem" })
            @Html.ValidationMessageFor(model => model.ItemName)
        </div>
        <div>
            Original price:
        </div>
        <div>
            <input type="number" id="searchItemPrice" disabled="disabled"/>
        </div>
        <div>
            Sale Price:
        </div>
        <div>
            @Html.TextBoxFor(model => model.SalePriceOfItem)
        </div>
        <input type="submit" value="Submit" class="button" id="addItem" />
    </fieldset>
 }

<div id="error-modal" title="ERROR: Duplicate Entry">
    That item is already on sale during the specified event. Please edit the existing entry.
</div>

<div id="currentItems">@{Html.RenderPartial("ItemToEvent", Model.SalePrices);}</div>

<script>

    //Updates the currentItems list when an eventCode is modified in the dropdown list.
    $(document).ready(function() {
        $("#eventCode").change(function() {
            var name = $("#eventCode").val();
                $.ajax({
                    type: "post",
                    url: "/Event/getAllSalePricesForEvent", //Controller method.
                    dataType: "html",
                    data: "id="+name, //id that is passed into the controller method.
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    success: function (result) { validate(result); }
                });
        });
    });

    //Generates the list based on the result of the above jQuery function.
    function validate(result) {
        $("#currentItems").html("");
        $("#currentItems").html(result);
    }

    $('#searchItem').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "ItemApi" })',
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label:  item.Name + " | " + item.RecRPC,
                            itemName: item.Name,
                            itemPrice: item.SellPrice
                        }
                    }).slice(0, 10));
                }
            })
        },
            select: function (event, ui) {
                $('#searchItem').val(ui.item.itemName);
                $('#searchItemPrice').val(ui.item.itemPrice);
                return false;
            },
            minLength: 1
    });

    //jQuery modal that is used when duplicate data is entered.
    $("#error-modal").dialog({
        height: 140,
        modal: true,
        autoOpen: false
    });

    //Checkes for duplicate sale prices in the database.
    $("#form").submit(function ( event ) {
        $.getJSON('@Url.Action("CheckForDuplicateSalePrice", "Event")', //Controller method.
            {
                item: $('#searchItem').val(), //Paramaters of the controller method.
                etc: $('#eventCode').val() //Paramaters of the controller method.
            },

            //Checks to see if the return data is valid.
            function (data) {
                if (data.isDuplicate) {
                    $('#error-modal').dialog('open');
                }
            }
        );
        
    });

</script>