@model RecOutletWarehouse.Controllers.VendorController.ProductLineSalesRepViewModel


@{
    ViewBag.Title = "CreateNewPL";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section tabnavigation{
    <ul class="nav clearfix">
        <li>@Html.ActionLink("Manage Vendors", "BrowseVendors")</li>
        <li>@Html.ActionLink("Add a Vendor", "AddVendor")</li>
        <li class="active">@Html.ActionLink("Add a Product Line","CreateNewPL")</li>
        <li>@Html.ActionLink("Manage Sales Reps","BrowseSalesReps")</li>
    </ul>  
}

<script>
    $(document).ready(function () {
        $(function () {
            $('.newrep').hide();
        });

        $("input:radio[name$='existingrep']").click(function () {
            var $this = $(this);
            if ($this.val() == "Yes") {
                $('.existrep').show();
                $('.newrep').hide();
                $('.newrepinput').val('');
            } else {
                $('.existrep').hide();
                $('.newrep').show();
                $('.searchrep').val('');
            }
        });
    });
</script>

<h2>Create New Product Line</h2>
<ul>
@if (ViewBag.ProductLineSuccess != null) {
    <li class="successful-insert">@ViewBag.ProductLineSuccess<br /></li>
}
@if (ViewBag.RepSuccess != null) {
    <li class="successful-insert">@ViewBag.RepSuccess</li>
}
</ul>    

@using(Html.BeginForm()){
    <fieldset>
        <legend>Product line information</legend>
        <ul class="no-list">
            <li>
                Vendor<strong class="required">*</strong> @Html.TextBoxFor(newPL => newPL.vendorName, new { @Value = ViewBag.VendorName, @id="vendor" })
                @Html.ValidationMessageFor(newPL => newPL.vendorName)
            </li>
            <li>
                &nbsp Product Line Name<strong class="required">*</strong> @Html.TextBoxFor(newPL => newPL.productLine.ProductLineName)
                @Html.ValidationMessageFor(newPL => newPL.productLine.ProductLineName)
            </li>
        </ul>
    </fieldset>
    
    <p>
        Product line's sales rep is in our database already: <input type="radio" name="existingrep" checked value="Yes"/>Yes <input type="radio" name="existingrep" value="No"/>No
        <br />@Html.ValidationMessageFor(newPL => newPL.rep.RepID)
    </p>

    <fieldset class="existrep">
        <legend>Find an existing rep</legend>
        <ul class="no-list">
            
            <li>Rep Name<strong class="required">*</strong> <input type="text" id="searchrep" /></li>
        </ul>
        @Html.HiddenFor(model => model.existingRepFirst, new { @id = "existFirst" }) 
        @Html.HiddenFor(model => model.existingRepLast, new { @id = "existLast" })
    </fieldset>
    
    <fieldset class="newrep">
        <legend>New sales representative information</legend>
        <table>
            <tr>
                <td>First Name<strong class="required">*</strong> @Html.TextBoxFor(newPL => newPL.newRepFirst, new { @class="newrepinput" })</td>
                <td>Last Name<strong class="required">*</strong> @Html.TextBoxFor(newPL => newPL.newRepLast, new  { @class="newrepinput" })</td>
            </tr>
            <tr>
                <td>Rep phone number<strong class="required">*</strong> @Html.TextBoxFor(newPL => newPL.rep.SalesRepPhone, new { @class="newrepinput", @id="PhoneNumber" })</td>
                <td>&nbsp Rep Email address @Html.TextBoxFor(newPL => newPL.rep.SalesRepEmail, new { @class="newrepinput", @id="PhoneNumber"})</td>
            </tr>
        </table>
    </fieldset>
    <input type="submit" value="Create New Product Line" class="button"/>
}

<script>
    $('#vendor').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "VendorApi" })',
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.VendorName
                        }
                    }).slice(0,10));
                }
            })
        },
        select: function (event, ui) {
            $('#vendor').val(ui.item.label);
            //$('#Id').val(ui.item.label);
            return false;
        },
        minLength: 1
    });

    $('#searchrep').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url:'@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "SalesRepApi" })',
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.SalesRepFirstName + " " + item.SalesRepLastName,
                            first: item.SalesRepFirstName,
                            last: item.SalesRepLastName
                        }
                    }).slice(0,10));
                }
            })
        },
        select: function (event, ui) {
            $('#searchrep').val(ui.item.label);
            $('#existFirst').val(ui.item.first);
            $('#existLast').val(ui.item.last);
            return false;
        },
        minLength: 1
    });
</script>