@model RecOutletWarehouse.Controllers.ReceivingLogController.ReceivingLogCreationViewModel

@{
    ViewBag.Title = "Create Receiving Log";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section tabnavigation{
    <ul class="nav clearfix">
        <li class="active">@Html.ActionLink("Create Receiving Log", "Index")</li>
        <li>@Html.ActionLink("Browse Receiving Logs", "BrowseReceivingLogs")</li>
    </ul>  
}

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-latest.min.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">
<!-- Data Table Stuffs -->
<script type="text/javascript" charset="utf8" src="http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/jquery.dataTables.min.js"></script>
<link rel="stylesheet" type="text/css" href="http://ajax.aspnetcdn.com/ajax/jquery.dataTables/1.9.4/css/jquery.dataTables.css">
<style>
    #feedback { font-size: 1.4em; }
    #selectable .ui-selecting { background: #FECA40; }
    #selectable .ui-selected { background: #F39814; color: white; }
    #selectable { list-style-type: none; margin: 0; padding: 0; width: 60%; }
    #selectable li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; }
</style>

<!-- Definitions and Object Creators -->
<script>
    $(function () {
        $("#selectable").selectable({ selected: function (event, ui) { } })
    });

    $(document).ready(function () {
        $("#potable").dataTable();
    });

    $(function () {
        $("#selectable").on("selectableselected", function (event, ui) {
            $("#po").val($("#selectable").text());
        })
    });

    $(function () {
        $("#recDate").datepicker();
    });
</script>

<!-- Used to get the PO ID they clicked on and populate the search box, then auto submit
     it to the controller -->
<script type="text/javascript">

    function fillPOwithID(ID) {
        document.getElementById("po").value = ID;
        document.forms["orig"].submit();
    }
</script>

<h2>Create Receiving Log</h2>

<!-- Centers elements -->
<div class="center-element center-text">
    <table class="button-columns">
        <tr>
            @*All elements will be created here upon page generation*@             
        </tr>
    </table>
    
<!-- If a PO was selected and a model was returned, all the list items are displayed and 
     ready to be received -->
@if (Model != null)
{
    var count = 0;

    using (Html.BeginForm("CreateReceived", "ReceivingLog", FormMethod.Post))//, new { name = count + "", id = count + "", onsubmit = "return false;"}) )
    
    {
        <div class="center-element center-text potable-area">
            <table class="potable" id="RLtable">

                <tr>
                    <td colspan="7">
                        Current PO:
                        @ViewBag.CurrentPO
                    </td>
                </tr>

              <tr>
                <th>Item RPC:</th>
                  <th>Item Description:</th>
                <th>Qty Ordered:</th>
                <th>Qty Type ID:</th>
                <th>Receive Date:</th>
                <th>Qty Received:</th>
                <th>Notes:</th>
                @*<th></th>*@
              </tr>

            @foreach (RecOutletWarehouse.Models.PO_LINEITEM objPO in Model.LineItems)
            {
            
                var desc = Model.ItemDescription[count];
                
            <tr>    

                @Html.Hidden("POID", @objPO.POID)
                @Html.HiddenFor(model => model.RL[count].POLineItemID, new { @Value = @objPO.POLineItemID })
                
                <td>
                    @objPO.RecRPC
                </td>
                <td>
                    @Html.DisplayFor(x => desc)
                    @Html.HiddenFor(model => model.ItemDescription[count], new { @Value = desc })
                </td>
                <td>
                    @objPO.QtyOrdered
                </td>
                <td>
                    @*NEED: a more dynamic method. IE get a list of the options from the db and use that for the select list. *@
                    @Html.DropDownListFor(model => model.RL[count].QtyTypeID, new SelectList(
                        new List<Object> {
                            new { Value = 1, Text = "Each" },
                            new { Value = 2, Text = "Case" },
                            new { Value = 3, Text = "Pallet" }
                        },
                        "value",
                        "text"
                        ,1))
                                        
                </td>
                <td>
                    @*Receive Date:*@ 
                    @Html.TextBoxFor(model => model.RL[count].ReceiveDate, new { type = "date", @Value = DateTime.Now.Date.ToString("MM/dd/yyyy"), id = "recDate", @class = "datepicker" })
                    <br />
                    @Html.ValidationMessageFor(model => model.RL[count].ReceiveDate)
                </td>
                <td>
                    @*Qty Received:*@ 
                    @Html.TextBoxFor(model => model.RL[count].ReceivedQty) @*, new { @Value = @objPO.QtyOrdered })*@
                    <br />
                    @Html.ValidationMessageFor(model => model.RL[count].ReceivedQty)
                </td>
                <td>
                    @*Notes:*@ 
                    @Html.TextAreaFor(model => model.RL[count].ReceivingNotes)
                </td>
            </tr>
            
                count++;

            }

            </table>

        </div>
    
        <br />
            <input type="submit" value="Record Received" class="button" />
    
    }


}

<!-- When no PO has been select, and thus no model returned, the PO Table is filled with PO's
     yet receivied for the user to puruse -->
@if (ViewBag.NonReceivedPOs != null)
{
    using (Html.BeginForm("findPO", "ReceivingLog", FormMethod.Post, new { name = "origForm", id = "orig" }))
    {
        <input type="text" placeholder="Search by PO ID" id="po" name="po" />     
        <input type="submit" value="Begin RL" class="button" id="poSub"/>
    }

    <br />
    
    <table id="potable">
        <thead>
            <tr>
                <th>PO ID:</th>
                <th>Est Ship Date:</th>
                <th>Order Date:</th>
                <th>Vendor:</th>
                <th>Comments:</th>
            </tr>
        </thead>

        <tbody>
            @foreach (RecOutletWarehouse.Models.PURCHASE_ORDER objPO in ViewBag.NonReceivedPOs)
            {
            
            <tr>
                <td><a href="javascript:fillPOwithID(@objPO.POID)">@objPO.POID</a></td>
                <td>@objPO.POEstimatedShipDate</td>
                <td>@objPO.POOrderDate</td>
                <td>@objPO.VendorID</td>
                <td>@objPO.POComments</td>
            </tr>

            }

        </tbody>

    </table>
    
}

<br />

    

</div>
