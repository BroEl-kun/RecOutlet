@model RecOutletWarehouse.Controllers.PurchaseOrderController.PurchaseOrderCreationViewModel

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<head>
    <title>Add Items to Purchase Order</title>
    <script>
        function doStuff() {
            var nameElement = document.getElementById("someInput");
            var theName = nameElement.value;
            document.getElementById("someDiv").innerHTML += theName;
        }
    </script>
</head>

<h2>Add Items to Purchase Order</h2>
<fieldset>
    <legend>Purchase Order General Information</legend>
    <table>
        <tr>
            <td>PO #:</td>
            <td>@Html.DisplayFor(model => model.PO.POID)</td>
            <td>Vendor:</td>
            <td>@Html.DisplayFor(model => model.PO.VENDOR.VendorName, new { id = "vendor" })</td>
        </tr>
        <tr>
            <td>PO ordered on:</td>
            <td>@Html.DisplayFor(model => model.PO.POOrderDate)</td>
            <td>PO estimated ship date: </td>
            <td>@Html.DisplayFor(model => model.PO.POEstimatedShipDate)</td>
        </tr>
    </table>
</fieldset>
<h3>Add new items to this purchase order</h3>
@using (@Html.BeginForm("AddPOLineItem", "PurchaseOrder", new { id = Model.PO.POID }, FormMethod.Post)) {
    <table>
        <tr class="table-header">
            <td>Item Name</td>
            <td>Qty to order</td>
            <td>RPC #</td>
            <td>Vendor Item #</td>
            <td>Cost Per Item </td>

            @*<td>Qty type</td>*@
        </tr>
        @for (int i = 0; i < 6; i++) {
            <tr>
                <td>@Html.TextBoxFor(model => model.ItemNames[i])</td>
                <td>@Html.TextBoxFor(model => model.LineItems[i].QtyOrdered)</td>
                <td>@Html.TextBoxFor(model => model.LineItems[i].RecRPC, new { @readonly = "readonly" })</td>
                <td>@Html.TextBoxFor(model => model.VendorIds[i], new { @readonly = "readonly" })</td>
                <td>@Html.TextBoxFor(model => model.LineItems[i].WholesaleCost, new { @readonly = "readonly" })</td>

                @*<td>@Html.TextBoxFor(model => model.LineItems[i].QtyTypeId)</td>*@
            </tr>
        }
    </table>
    <input type="submit" value="Add These Items to the PO" class="button"/>
    <input type="button" value="Cancel, Discard PO" class="button"/>
    <input type="button" value="Create PO, Discard Changes" class="button"/>
}

<script type="text/javascript">
    var url = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_0_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url,
                data: { query: request.term},
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_0_').val(ui.item.label);
            $('#LineItems_0__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_0_').val(ui.item.VendorItemID);
            $('#LineItems_0__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });

    var url1 = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_1_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url1,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_1_').val(ui.item.label);
            $('#LineItems_1__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_1_').val(ui.item.VendorItemID);
            $('#LineItems_1__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });

    var url2 = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_2_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url2,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_2_').val(ui.item.label);
            $('#LineItems_2__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_2_').val(ui.item.VendorItemID);
            $('#LineItems_2__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });

    var url3 = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_3_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url3,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_3_').val(ui.item.label);
            $('#LineItems_3__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_3_').val(ui.item.VendorItemID);
            $('#LineItems_3__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });

    var url4 = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_4_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url4,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_4_').val(ui.item.label);
            $('#LineItems_4__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_4_').val(ui.item.VendorItemID);
            $('#LineItems_4__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });

    var url5 = '@Url.RouteUrl("DefaultApi",
    new { httproute = "", controller = "ItemApi" })';
    $('#ItemNames_5_').autocomplete({
        autoFocus: true,
        source: function (request, response) {
            $.ajax({
                url: url5,
                data: { query: request.term },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.ItemName,
                            RecRPC: item.RecRPC,
                            VendorItemID: item.VendorItemID,
                            Cost: item.SellPrice
                        }
                    }));
                }
            })
        },
        select: function (event, ui) {
            $('#ItemNames_5_').val(ui.item.label);
            $('#LineItems_5__RecRPC').val(ui.item.RecRPC);
            $('#VendorIds_5_').val(ui.item.VendorItemID);
            $('#LineItems_5__WholesaleCost').val(ui.item.Cost);
            return false;
        },
        minLength: 1
    });


</script>